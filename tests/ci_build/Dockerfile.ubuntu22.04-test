ARG UBUNTU_VERSION=22.04
FROM ubuntu:${UBUNTU_VERSION}
ARG DEBIAN_FRONTEND=noninteractive
ENV LC_ALL="C"
ENV TZ=Europe/Warsaw
RUN ln -snf /usr/share/zoneinfo/${TZ} /etc/localtime && echo ${TZ} > /etc/timezone
COPY ./tests/setup_machine.sh /tmp/
COPY ./tests/ci_build/setup-test-machine.sh \
    ./tests/ci_build/60-ip_port_range.conf \
    ./tests/ci_build/zonefs-tools-setup.sh \
    /tmp/ci_build/
ARG GROUP_ID=1000
ARG USER_ID=1000
ARG USERNAME=jenkins
ARG USER_HOME=/home/${USERNAME}
ENV GROUP_ID=${GROUP_ID}
ENV USER_ID=${USER_ID}
ENV USERNAME=${USERNAME}
ENV GTEST_ROOT=/usr/local

# Create user and permissions
RUN set -e ; \
    apt-get update ; apt-get install --yes sudo ; \
    rm -rf /var/lib/apt/lists/*; \
    groupadd -g ${GROUP_ID} ${USERNAME}; \
    useradd -r -m -u ${USER_ID} -g ${GROUP_ID} -d ${USER_HOME} ${USERNAME}; \
    mkdir -p ${USER_HOME}/.cache/ccache; \
    chmod -R ugo+rwX ${USER_HOME}; \
    echo "${USERNAME} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers ; \
    chmod 0440 /etc/sudoers

WORKDIR ${USER_HOME}

# Setup python3 with a global virtual env (new recommended way)
ENV VIRTUAL_ENV=/opt/venv
ENV PATH="${VIRTUAL_ENV}/bin:${PATH}"
RUN set -e ; \
    apt-get update ; \
    apt-get install --yes \
      python3-pip \
      python3-setuptools \
      python3-venv \
      python3-wheel ; \
    rm -rf /var/lib/apt/lists/* ; \
    python3 -m venv "${VIRTUAL_ENV}"; \
    pip install asciidoc

# Run the setup-test-machine.sh script
RUN set -e ; \
    apt-get update ; \
    chmod +x /tmp/ci_build/setup-test-machine.sh ; \
    /tmp/ci_build/setup-test-machine.sh ; \
    rm -rf /var/lib/apt/lists/*

# Enable additional basic tools
RUN set -e ; \
    apt-get update ; \
    apt-get install --yes \
      lcov \
      procps \
      rsyslog \
      systemd \
      tini ; \
    rm -rf /var/lib/apt/lists/* ; \
    sed -i '/imklog/s/^/#/' /etc/rsyslog.conf ; \
    touch /var/log/syslog ; \
    chmod -R a+rwX-t /tmp /var/log /mnt/ramdisk; \
    chown -R ${USERNAME}:${USERNAME} /tmp /var/log; \
    pip install lcov_cobertura; \
    true
COPY ./tests/ci_build/docker_entrypoint.test /docker_entrypoint.sh
RUN chmod +x /docker_entrypoint.sh
ENTRYPOINT ["tini", "--", "/docker_entrypoint.sh" ]
